{"version":3,"sources":["components/ListItemComp.jsx","components/TableComp.jsx","components/BreadComp.jsx","components/App.jsx","reportWebVitals.js","index.jsx"],"names":["useStyles","makeStyles","theme","nested","paddingLeft","spacing","ListItemComp","classes","React","useState","open","setOpen","Grid","container","direction","justify","IconButton","Divider","ListItem","button","className","ListItemIcon","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","List","component","secondary","createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","style","fontWeight","TableSortLabel","active","property","event","visuallyHidden","root","paddingRight","highlight","palette","type","color","main","backgroundColor","lighten","light","text","dark","title","flex","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","chipColor","TableComp","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","target","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","Chip","clickable","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","minW","padZero","colorWhite","selectedColor","BreadComp","Breadcrumbs","paddingBottom","Link","href","fontSize","Typography","createMuiTheme","display","toolbar","toolbarIcon","alignItems","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","paddingTop","flexDirection","fixedHeight","a11yProps","App","setValue","clsx","ThemeProvider","CssBaseline","AppBar","Container","maxWidth","Toolbar","item","variant","noWrap","Tabs","newValue","Tab","Drawer","xs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d384803b.chunk.js","sourcesContent":["import React from 'react';\nimport { Divider, Grid, Drawer, IconButton, Typography, makeStyles, List, ListItem } from '@material-ui/core'\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\n\nconst useStyles = makeStyles((theme) => ({\n    nested: {\n        paddingLeft: theme.spacing(4),\n    }\n}))\n\n\nconst ListItemComp = () => {\n    const classes = useStyles;\n\n    const [open, setOpen] = React.useState(true);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n    return (\n        <>\n            <Grid container direction=\"row\" justify=\"space-evenly\">\n                <IconButton>\n                    <SearchIcon />\n                </IconButton>\n                <IconButton>\n                    <PersonIcon />\n                </IconButton>\n                <IconButton>\n                    <SettingsApplicationsIcon />\n                </IconButton>\n            </Grid>\n            <Divider />\n            <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                    <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Home\" />\n            </ListItem>\n            <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                    <PeopleIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Customers\" />\n            </ListItem>\n            <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                    <PaymentIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Payments\" />\n            </ListItem>\n            <ListItem button onClick={handleClick}>\n                <ListItemIcon>\n                    <SettingsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Management\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\">\n                    <ListItem button className={classes.nested}>\n                        <ListItemText secondary=\"Products\" />\n                    </ListItem>\n                    <ListItem button className={classes.nested}>\n                        <ListItemText secondary=\"Orders\" />\n                    </ListItem>\n                </List>\n            </Collapse>\n        </>\n    )\n}\n\nexport default ListItemComp;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { Chip } from '@material-ui/core';\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n    createData('Pending', 'Amazon Limited Corp', 'Acme Company LLC', 9865, '2 Dec 2020'),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    { id: 'status', numeric: false, disablePadding: true, label: 'Status' },\n    { id: 'from', numeric: false, disablePadding: false, label: 'From' },\n    { id: 'tot', numeric: false, disablePadding: false, label: 'To' },\n    { id: 'amount', numeric: true, disablePadding: false, label: 'Amount($)' },\n    { id: 'duedate', numeric: false, disablePadding: false, label: 'Due Date' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                        style={{ fontWeight: 600 }}\n\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.secondary.main,\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                        Nutrition\n                    </Typography>\n                )}\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                    <Tooltip title=\"Filter list\">\n                        <IconButton aria-label=\"filter list\">\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    chipColor: {\n        color: \"#fff\",\n        backgroundColor: \"#2196F3\"\n    }\n}));\n\nexport default function TableComp() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                <Chip\n                                                    size=\"small\"\n                                                    label={row.name}\n                                                    clickable\n                                                    className={classes.chipColor}\n                                                />\n                                            </TableCell>\n                                            <TableCell align=\"left\">{row.calories}</TableCell>\n                                            <TableCell align=\"left\">{row.fat}</TableCell>\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/styles';\nimport { ListItem, Link, Breadcrumbs } from '@material-ui/core';\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Typography from '@material-ui/core/Typography';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\n\nconst useStyles = makeStyles((theme) => ({\n    minW: {\n        minWidth: \"0px\"\n    },\n    padZero: {\n        padding: \"0px\"\n    },\n    colorWhite: {\n        color: \"#aaaaaa\",\n    },\n    selectedColor: {\n        color: \"#ffffff\"\n    }\n}));\n\n\nexport const BreadComp = () => {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Breadcrumbs style={{ paddingBottom: '5px' }} aria-label=\"breadcrumb\" className={classes.colorWhite}>\n                <ListItem button className={classes.padZero}>\n                    <ListItemIcon className={classes.minW} >\n                        <Link color=\"inherit\" href=\"/\">\n                            <HomeIcon fontSize=\"small\" className={classes.colorWhite} />\n                        </Link>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n                <ListItem button className={classes.padZero}>\n                    <ListItemIcon className={classes.minW}>\n                        <Link color=\"inherit\" href=\"/\">\n                            <PaymentIcon fontSize=\"small\" className={classes.colorWhite} />\n                        </Link>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Orders\" />\n                </ListItem>\n                <ListItem button className={classes.padZero}>\n                    <ListItemIcon className={classes.minW}>\n                        <Typography color=\"inherit\">\n                            <BarChartIcon fontSize=\"small\" className={classes.colorWhite} />\n                        </Typography>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Reports\" />\n                </ListItem>\n            </Breadcrumbs >\n        </div>\n    )\n}\n","import './App.css';\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport {\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport EcoIcon from '@material-ui/icons/Eco';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemComp from './ListItemComp';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\nimport PersonIcon from '@material-ui/icons/Person';\nimport TableComp from './TableComp';\nimport { BreadComp } from './BreadComp';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0D3C61\"\n    },\n    secondary: {\n      main: \"#4CAF50\"\n    }\n  }\n});\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '8px 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(20),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst App = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n          <Container maxWidth=\"lg\">\n            <Toolbar className={classes.toolbar}>\n              <Grid container direction=\"column\" justify=\"flex-start\" >\n                <Grid container item direction=\"row\" alignItems=\"center\" justify=\"space-between\">\n                  <Grid item>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n                      Payments\n                </Typography>\n                  </Grid>\n                  <Grid item>\n                    <IconButton color=\"inherit\">\n                      <SearchIcon />\n                    </IconButton>\n                    <IconButton color=\"inherit\">\n                      <PersonIcon />\n                    </IconButton>\n                    <IconButton color=\"inherit\">\n                      <SettingsApplicationsIcon />\n                    </IconButton>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <BreadComp />\n                </Grid>\n                <Grid item>\n                  <Divider />\n                </Grid>\n                <Grid item>\n                  <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    aria-label=\"simple tabs example\"\n                    style={{ paddingTop: '20px' }}\n                  >\n                    <Tab style={{ color: '#4CAF50' }} label=\"PENDING\" {...a11yProps(0)} />\n                    <Tab label=\"SUBMITTED\" {...a11yProps(1)} />\n                    <Tab label=\"CONFIRMED\" {...a11yProps(2)} />\n                    <Tab label=\"FAILED\" {...a11yProps(3)} />\n                  </Tabs>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </Container>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <EcoIcon style={{ fontSize: \"50px\", color: '#0B79D0' }} />\n            <Typography variant=\"h6\" style={{ fontWeight: '600' }}>\n              <span style={{ color: '#0B79D0' }}>UI </span>Dashboard\n            </Typography>\n          </div>\n          <Divider />\n          <List>\n            <ListItemComp />\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                {/* <Orders /> */}\n                <TableComp />\n              </Grid>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}